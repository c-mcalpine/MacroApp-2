workflows:
  ios-workflow:
    name: iOS Workflow
    integrations:
      app_store_connect: Codemagic API Key

    environment:
      ios_signing:
        distribution_type: app_store
        bundle_identifier: "com.christianmcalpine.macroapp"
      flutter: stable
      xcode: latest
      cocoapods: default
      vars:
        PROJECT_PATH: "frontend"
        APP_STORE_APPLE_ID: 6745361330
        API_BASE_URL: $API_BASE_URL
        SUPABASE_URL: $SUPABASE_URL
        SUPABASE_ANON_KEY: $SUPABASE_ANON_KEY
        XCODE_WORKSPACE: "Runner.xcworkspace"
        XCODE_SCHEME: "Runner"

    scripts:
      - name: Get Flutter packages
        script: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          cd $PROJECT_PATH
          flutter clean
          flutter pub get

      - name: Install CocoaPods
        script: |
          cd $PROJECT_PATH/ios 
          rm -rf build/
          rm -rf ios/Pods/
          rm -rf ios/Podfile.lock
          pod install --repo-update

      - name: Set up provisioning profiles
        script: |
          xcode-project use-profiles

      - name: Increment build number
        script: |
          cd $PROJECT_PATH/ios
          LATEST_BUILD=$(app-store-connect get-latest-build-number "$APP_STORE_APPLE_ID")
          agvtool new-version -all $((LATEST_BUILD + 1))

      - name: Verify app icons exist
        script: |
          cd $PROJECT_PATH
          echo "Checking for app icons..."
          ls -la ios/Runner/Assets.xcassets/AppIcon.appiconset/
          
          REQUIRED_ICONS="20.png 29.png 40.png 58.png 60.png 76.png 80.png 87.png 120.png 152.png 167.png 180.png 1024.png"
          for icon in $REQUIRED_ICONS; do
            if [ -f "ios/Runner/Assets.xcassets/AppIcon.appiconset/$icon" ]; then
              echo "✓ Found: $icon"
            else
              echo "✗ Missing: $icon"
              exit 1
            fi
          done
          echo "All required app icons found"

      - name: Verify asset catalog compilation
        script: |
          cd $PROJECT_PATH/ios
          echo "=== Testing asset catalog compilation ==="
          
          # Create output directory
          mkdir -p /tmp/test_assets
          
          # Test asset catalog compilation
          xcrun actool \
            --compile /tmp/test_assets \
            --platform iphoneos \
            --minimum-deployment-target 12.0 \
            --app-icon AppIcon \
            --output-partial-info-plist /tmp/partial.plist \
            Runner/Assets.xcassets
          
          COMPILE_RESULT=$?
          
          echo "=== Compilation exit code: $COMPILE_RESULT ==="
          echo "=== Compilation result ==="
          ls -la /tmp/test_assets/
          
          echo "=== Partial plist content ==="
          if [ -f /tmp/partial.plist ]; then
            cat /tmp/partial.plist
          else
            echo "No partial plist generated"
          fi
          
          echo "=== Assets.car contents ==="
          if [ -f /tmp/test_assets/Assets.car ]; then
            strings /tmp/test_assets/Assets.car | grep AppIcon || echo "No AppIcon strings found in .car"
          else
            echo "Assets.car not found!"
          fi
          
          if [ $COMPILE_RESULT -ne 0 ]; then
            echo "ERROR: Asset catalog compilation failed"
            exit 1
          fi
          
          echo "Asset catalog compilation successful"


      - name: Build Flutter iOS binary with dart-define
        script: |
          cd $PROJECT_PATH
          flutter build ios --release \
            --dart-define=API_BASE_URL=$API_BASE_URL \
            --dart-define=SUPABASE_URL=$SUPABASE_URL \
            --dart-define=SUPABASE_ANON_KEY=$SUPABASE_ANON_KEY

      - name: Export signed IPA
        script: |
          xcode-project build-ipa \
            --workspace "$PROJECT_PATH/ios/$XCODE_WORKSPACE" \
            --scheme "$XCODE_SCHEME" \
            --export-options-plist "$PROJECT_PATH/ios/exportOptions.plist" \
            --verbose

      - name: Inspect final IPA for app icons
        script: |
          mkdir -p /tmp/ipa_check
          unzip -q build/ios/ipa/*.ipa -d /tmp/ipa_check
          echo "=== IPA Contents ==="
          find /tmp/ipa_check -name "*.png" | grep -i icon
          echo "=== App Icon Asset Catalog ==="
          find /tmp/ipa_check -path "*/Assets.car" -exec echo "Found Assets.car: {}" \;
          echo "=== Info.plist Icon Entries ==="
          find /tmp/ipa_check -name "Info.plist" -exec plutil -p {} \; | grep -i icon || echo "No icon entries found in Info.plist"

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $PROJECT_PATH/flutter_drive.log

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
      email:
        recipients:
          - cp.mcalpine@icloud.com
